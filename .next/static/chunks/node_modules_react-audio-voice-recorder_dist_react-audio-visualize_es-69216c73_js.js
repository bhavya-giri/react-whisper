"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_react-audio-voice-recorder_dist_react-audio-visualize_es-69216c73_js"],{

/***/ "./node_modules/react-audio-voice-recorder/dist/react-audio-visualize.es-69216c73.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/react-audio-voice-recorder/dist/react-audio-visualize.es-69216c73.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AudioVisualizer: function() { return /* binding */ br; },\n/* harmony export */   LiveAudioVisualizer: function() { return /* binding */ Sr; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nvar ne = { exports: {} }, z = {};\n/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar je;\nfunction dr() {\n  if (je)\n    return z;\n  je = 1;\n  var y = react__WEBPACK_IMPORTED_MODULE_0__, m = Symbol.for(\"react.element\"), _ = Symbol.for(\"react.fragment\"), b = Object.prototype.hasOwnProperty, h = y.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, w = { key: !0, ref: !0, __self: !0, __source: !0 };\n  function k(i, s, g) {\n    var o, a = {}, d = null, E = null;\n    g !== void 0 && (d = \"\" + g), s.key !== void 0 && (d = \"\" + s.key), s.ref !== void 0 && (E = s.ref);\n    for (o in s)\n      b.call(s, o) && !w.hasOwnProperty(o) && (a[o] = s[o]);\n    if (i && i.defaultProps)\n      for (o in s = i.defaultProps, s)\n        a[o] === void 0 && (a[o] = s[o]);\n    return { $$typeof: m, type: i, key: d, ref: E, props: a, _owner: h.current };\n  }\n  return z.Fragment = _, z.jsx = k, z.jsxs = k, z;\n}\nvar q = {};\n/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar Pe;\nfunction mr() {\n  return Pe || (Pe = 1,  true && function() {\n    var y = react__WEBPACK_IMPORTED_MODULE_0__, m = Symbol.for(\"react.element\"), _ = Symbol.for(\"react.portal\"), b = Symbol.for(\"react.fragment\"), h = Symbol.for(\"react.strict_mode\"), w = Symbol.for(\"react.profiler\"), k = Symbol.for(\"react.provider\"), i = Symbol.for(\"react.context\"), s = Symbol.for(\"react.forward_ref\"), g = Symbol.for(\"react.suspense\"), o = Symbol.for(\"react.suspense_list\"), a = Symbol.for(\"react.memo\"), d = Symbol.for(\"react.lazy\"), E = Symbol.for(\"react.offscreen\"), C = Symbol.iterator, T = \"@@iterator\";\n    function D(e) {\n      if (e === null || typeof e != \"object\")\n        return null;\n      var r = C && e[C] || e[T];\n      return typeof r == \"function\" ? r : null;\n    }\n    var l = y.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n    function f(e) {\n      {\n        for (var r = arguments.length, t = new Array(r > 1 ? r - 1 : 0), n = 1; n < r; n++)\n          t[n - 1] = arguments[n];\n        j(\"error\", e, t);\n      }\n    }\n    function j(e, r, t) {\n      {\n        var n = l.ReactDebugCurrentFrame, p = n.getStackAddendum();\n        p !== \"\" && (r += \"%s\", t = t.concat([p]));\n        var v = t.map(function(u) {\n          return String(u);\n        });\n        v.unshift(\"Warning: \" + r), Function.prototype.apply.call(console[e], console, v);\n      }\n    }\n    var xe = !1, Fe = !1, Ne = !1, Ae = !1, Ie = !1, oe;\n    oe = Symbol.for(\"react.module.reference\");\n    function Le(e) {\n      return !!(typeof e == \"string\" || typeof e == \"function\" || e === b || e === w || Ie || e === h || e === g || e === o || Ae || e === E || xe || Fe || Ne || typeof e == \"object\" && e !== null && (e.$$typeof === d || e.$$typeof === a || e.$$typeof === k || e.$$typeof === i || e.$$typeof === s || // This needs to include all possible module reference object\n      // types supported by any Flight configuration anywhere since\n      // we don't know which Flight build this will end up being used\n      // with.\n      e.$$typeof === oe || e.getModuleId !== void 0));\n    }\n    function ze(e, r, t) {\n      var n = e.displayName;\n      if (n)\n        return n;\n      var p = r.displayName || r.name || \"\";\n      return p !== \"\" ? t + \"(\" + p + \")\" : t;\n    }\n    function ae(e) {\n      return e.displayName || \"Context\";\n    }\n    function $(e) {\n      if (e == null)\n        return null;\n      if (typeof e.tag == \"number\" && f(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"), typeof e == \"function\")\n        return e.displayName || e.name || null;\n      if (typeof e == \"string\")\n        return e;\n      switch (e) {\n        case b:\n          return \"Fragment\";\n        case _:\n          return \"Portal\";\n        case w:\n          return \"Profiler\";\n        case h:\n          return \"StrictMode\";\n        case g:\n          return \"Suspense\";\n        case o:\n          return \"SuspenseList\";\n      }\n      if (typeof e == \"object\")\n        switch (e.$$typeof) {\n          case i:\n            var r = e;\n            return ae(r) + \".Consumer\";\n          case k:\n            var t = e;\n            return ae(t._context) + \".Provider\";\n          case s:\n            return ze(e, e.render, \"ForwardRef\");\n          case a:\n            var n = e.displayName || null;\n            return n !== null ? n : $(e.type) || \"Memo\";\n          case d: {\n            var p = e, v = p._payload, u = p._init;\n            try {\n              return $(u(v));\n            } catch {\n              return null;\n            }\n          }\n        }\n      return null;\n    }\n    var F = Object.assign, I = 0, ie, ce, le, se, ue, fe, pe;\n    function ye() {\n    }\n    ye.__reactDisabledLog = !0;\n    function We() {\n      {\n        if (I === 0) {\n          ie = console.log, ce = console.info, le = console.warn, se = console.error, ue = console.group, fe = console.groupCollapsed, pe = console.groupEnd;\n          var e = {\n            configurable: !0,\n            enumerable: !0,\n            value: ye,\n            writable: !0\n          };\n          Object.defineProperties(console, {\n            info: e,\n            log: e,\n            warn: e,\n            error: e,\n            group: e,\n            groupCollapsed: e,\n            groupEnd: e\n          });\n        }\n        I++;\n      }\n    }\n    function Me() {\n      {\n        if (I--, I === 0) {\n          var e = {\n            configurable: !0,\n            enumerable: !0,\n            writable: !0\n          };\n          Object.defineProperties(console, {\n            log: F({}, e, {\n              value: ie\n            }),\n            info: F({}, e, {\n              value: ce\n            }),\n            warn: F({}, e, {\n              value: le\n            }),\n            error: F({}, e, {\n              value: se\n            }),\n            group: F({}, e, {\n              value: ue\n            }),\n            groupCollapsed: F({}, e, {\n              value: fe\n            }),\n            groupEnd: F({}, e, {\n              value: pe\n            })\n          });\n        }\n        I < 0 && f(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\");\n      }\n    }\n    var X = l.ReactCurrentDispatcher, J;\n    function W(e, r, t) {\n      {\n        if (J === void 0)\n          try {\n            throw Error();\n          } catch (p) {\n            var n = p.stack.trim().match(/\\n( *(at )?)/);\n            J = n && n[1] || \"\";\n          }\n        return `\n` + J + e;\n      }\n    }\n    var K = !1, M;\n    {\n      var Ue = typeof WeakMap == \"function\" ? WeakMap : Map;\n      M = new Ue();\n    }\n    function de(e, r) {\n      if (!e || K)\n        return \"\";\n      {\n        var t = M.get(e);\n        if (t !== void 0)\n          return t;\n      }\n      var n;\n      K = !0;\n      var p = Error.prepareStackTrace;\n      Error.prepareStackTrace = void 0;\n      var v;\n      v = X.current, X.current = null, We();\n      try {\n        if (r) {\n          var u = function() {\n            throw Error();\n          };\n          if (Object.defineProperty(u.prototype, \"props\", {\n            set: function() {\n              throw Error();\n            }\n          }), typeof Reflect == \"object\" && Reflect.construct) {\n            try {\n              Reflect.construct(u, []);\n            } catch (x) {\n              n = x;\n            }\n            Reflect.construct(e, [], u);\n          } else {\n            try {\n              u.call();\n            } catch (x) {\n              n = x;\n            }\n            e.call(u.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            n = x;\n          }\n          e();\n        }\n      } catch (x) {\n        if (x && n && typeof x.stack == \"string\") {\n          for (var c = x.stack.split(`\n`), O = n.stack.split(`\n`), S = c.length - 1, R = O.length - 1; S >= 1 && R >= 0 && c[S] !== O[R]; )\n            R--;\n          for (; S >= 1 && R >= 0; S--, R--)\n            if (c[S] !== O[R]) {\n              if (S !== 1 || R !== 1)\n                do\n                  if (S--, R--, R < 0 || c[S] !== O[R]) {\n                    var P = `\n` + c[S].replace(\" at new \", \" at \");\n                    return e.displayName && P.includes(\"<anonymous>\") && (P = P.replace(\"<anonymous>\", e.displayName)), typeof e == \"function\" && M.set(e, P), P;\n                  }\n                while (S >= 1 && R >= 0);\n              break;\n            }\n        }\n      } finally {\n        K = !1, X.current = v, Me(), Error.prepareStackTrace = p;\n      }\n      var A = e ? e.displayName || e.name : \"\", Oe = A ? W(A) : \"\";\n      return typeof e == \"function\" && M.set(e, Oe), Oe;\n    }\n    function Be(e, r, t) {\n      return de(e, !1);\n    }\n    function Ve(e) {\n      var r = e.prototype;\n      return !!(r && r.isReactComponent);\n    }\n    function U(e, r, t) {\n      if (e == null)\n        return \"\";\n      if (typeof e == \"function\")\n        return de(e, Ve(e));\n      if (typeof e == \"string\")\n        return W(e);\n      switch (e) {\n        case g:\n          return W(\"Suspense\");\n        case o:\n          return W(\"SuspenseList\");\n      }\n      if (typeof e == \"object\")\n        switch (e.$$typeof) {\n          case s:\n            return Be(e.render);\n          case a:\n            return U(e.type, r, t);\n          case d: {\n            var n = e, p = n._payload, v = n._init;\n            try {\n              return U(v(p), r, t);\n            } catch {\n            }\n          }\n        }\n      return \"\";\n    }\n    var B = Object.prototype.hasOwnProperty, me = {}, ge = l.ReactDebugCurrentFrame;\n    function V(e) {\n      if (e) {\n        var r = e._owner, t = U(e.type, e._source, r ? r.type : null);\n        ge.setExtraStackFrame(t);\n      } else\n        ge.setExtraStackFrame(null);\n    }\n    function qe(e, r, t, n, p) {\n      {\n        var v = Function.call.bind(B);\n        for (var u in e)\n          if (v(e, u)) {\n            var c = void 0;\n            try {\n              if (typeof e[u] != \"function\") {\n                var O = Error((n || \"React class\") + \": \" + t + \" type `\" + u + \"` is invalid; it must be a function, usually from the `prop-types` package, but received `\" + typeof e[u] + \"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                throw O.name = \"Invariant Violation\", O;\n              }\n              c = e[u](r, u, n, t, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n            } catch (S) {\n              c = S;\n            }\n            c && !(c instanceof Error) && (V(p), f(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\", n || \"React class\", t, u, typeof c), V(null)), c instanceof Error && !(c.message in me) && (me[c.message] = !0, V(p), f(\"Failed %s type: %s\", t, c.message), V(null));\n          }\n      }\n    }\n    var Ye = Array.isArray;\n    function Q(e) {\n      return Ye(e);\n    }\n    function He(e) {\n      {\n        var r = typeof Symbol == \"function\" && Symbol.toStringTag, t = r && e[Symbol.toStringTag] || e.constructor.name || \"Object\";\n        return t;\n      }\n    }\n    function Xe(e) {\n      try {\n        return ve(e), !1;\n      } catch {\n        return !0;\n      }\n    }\n    function ve(e) {\n      return \"\" + e;\n    }\n    function he(e) {\n      if (Xe(e))\n        return f(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\", He(e)), ve(e);\n    }\n    var L = l.ReactCurrentOwner, Je = {\n      key: !0,\n      ref: !0,\n      __self: !0,\n      __source: !0\n    }, be, we, Z;\n    Z = {};\n    function Ke(e) {\n      if (B.call(e, \"ref\")) {\n        var r = Object.getOwnPropertyDescriptor(e, \"ref\").get;\n        if (r && r.isReactWarning)\n          return !1;\n      }\n      return e.ref !== void 0;\n    }\n    function Qe(e) {\n      if (B.call(e, \"key\")) {\n        var r = Object.getOwnPropertyDescriptor(e, \"key\").get;\n        if (r && r.isReactWarning)\n          return !1;\n      }\n      return e.key !== void 0;\n    }\n    function Ze(e, r) {\n      if (typeof e.ref == \"string\" && L.current && r && L.current.stateNode !== r) {\n        var t = $(L.current.type);\n        Z[t] || (f('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', $(L.current.type), e.ref), Z[t] = !0);\n      }\n    }\n    function Ge(e, r) {\n      {\n        var t = function() {\n          be || (be = !0, f(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\", r));\n        };\n        t.isReactWarning = !0, Object.defineProperty(e, \"key\", {\n          get: t,\n          configurable: !0\n        });\n      }\n    }\n    function er(e, r) {\n      {\n        var t = function() {\n          we || (we = !0, f(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\", r));\n        };\n        t.isReactWarning = !0, Object.defineProperty(e, \"ref\", {\n          get: t,\n          configurable: !0\n        });\n      }\n    }\n    var rr = function(e, r, t, n, p, v, u) {\n      var c = {\n        // This tag allows us to uniquely identify this as a React Element\n        $$typeof: m,\n        // Built-in properties that belong on the element\n        type: e,\n        key: r,\n        ref: t,\n        props: u,\n        // Record the component responsible for creating this element.\n        _owner: v\n      };\n      return c._store = {}, Object.defineProperty(c._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: !1\n      }), Object.defineProperty(c, \"_self\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !1,\n        value: n\n      }), Object.defineProperty(c, \"_source\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !1,\n        value: p\n      }), Object.freeze && (Object.freeze(c.props), Object.freeze(c)), c;\n    };\n    function tr(e, r, t, n, p) {\n      {\n        var v, u = {}, c = null, O = null;\n        t !== void 0 && (he(t), c = \"\" + t), Qe(r) && (he(r.key), c = \"\" + r.key), Ke(r) && (O = r.ref, Ze(r, p));\n        for (v in r)\n          B.call(r, v) && !Je.hasOwnProperty(v) && (u[v] = r[v]);\n        if (e && e.defaultProps) {\n          var S = e.defaultProps;\n          for (v in S)\n            u[v] === void 0 && (u[v] = S[v]);\n        }\n        if (c || O) {\n          var R = typeof e == \"function\" ? e.displayName || e.name || \"Unknown\" : e;\n          c && Ge(u, R), O && er(u, R);\n        }\n        return rr(e, c, O, p, n, L.current, u);\n      }\n    }\n    var G = l.ReactCurrentOwner, Se = l.ReactDebugCurrentFrame;\n    function N(e) {\n      if (e) {\n        var r = e._owner, t = U(e.type, e._source, r ? r.type : null);\n        Se.setExtraStackFrame(t);\n      } else\n        Se.setExtraStackFrame(null);\n    }\n    var ee;\n    ee = !1;\n    function re(e) {\n      return typeof e == \"object\" && e !== null && e.$$typeof === m;\n    }\n    function ke() {\n      {\n        if (G.current) {\n          var e = $(G.current.type);\n          if (e)\n            return `\n\nCheck the render method of \\`` + e + \"`.\";\n        }\n        return \"\";\n      }\n    }\n    function nr(e) {\n      {\n        if (e !== void 0) {\n          var r = e.fileName.replace(/^.*[\\\\\\/]/, \"\"), t = e.lineNumber;\n          return `\n\nCheck your code at ` + r + \":\" + t + \".\";\n        }\n        return \"\";\n      }\n    }\n    var Re = {};\n    function or(e) {\n      {\n        var r = ke();\n        if (!r) {\n          var t = typeof e == \"string\" ? e : e.displayName || e.name;\n          t && (r = `\n\nCheck the top-level render call using <` + t + \">.\");\n        }\n        return r;\n      }\n    }\n    function _e(e, r) {\n      {\n        if (!e._store || e._store.validated || e.key != null)\n          return;\n        e._store.validated = !0;\n        var t = or(r);\n        if (Re[t])\n          return;\n        Re[t] = !0;\n        var n = \"\";\n        e && e._owner && e._owner !== G.current && (n = \" It was passed a child from \" + $(e._owner.type) + \".\"), N(e), f('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', t, n), N(null);\n      }\n    }\n    function Ee(e, r) {\n      {\n        if (typeof e != \"object\")\n          return;\n        if (Q(e))\n          for (var t = 0; t < e.length; t++) {\n            var n = e[t];\n            re(n) && _e(n, r);\n          }\n        else if (re(e))\n          e._store && (e._store.validated = !0);\n        else if (e) {\n          var p = D(e);\n          if (typeof p == \"function\" && p !== e.entries)\n            for (var v = p.call(e), u; !(u = v.next()).done; )\n              re(u.value) && _e(u.value, r);\n        }\n      }\n    }\n    function ar(e) {\n      {\n        var r = e.type;\n        if (r == null || typeof r == \"string\")\n          return;\n        var t;\n        if (typeof r == \"function\")\n          t = r.propTypes;\n        else if (typeof r == \"object\" && (r.$$typeof === s || // Note: Memo only checks outer props here.\n        // Inner props are checked in the reconciler.\n        r.$$typeof === a))\n          t = r.propTypes;\n        else\n          return;\n        if (t) {\n          var n = $(r);\n          qe(t, e.props, \"prop\", n, e);\n        } else if (r.PropTypes !== void 0 && !ee) {\n          ee = !0;\n          var p = $(r);\n          f(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", p || \"Unknown\");\n        }\n        typeof r.getDefaultProps == \"function\" && !r.getDefaultProps.isReactClassApproved && f(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\");\n      }\n    }\n    function ir(e) {\n      {\n        for (var r = Object.keys(e.props), t = 0; t < r.length; t++) {\n          var n = r[t];\n          if (n !== \"children\" && n !== \"key\") {\n            N(e), f(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\", n), N(null);\n            break;\n          }\n        }\n        e.ref !== null && (N(e), f(\"Invalid attribute `ref` supplied to `React.Fragment`.\"), N(null));\n      }\n    }\n    function Ce(e, r, t, n, p, v) {\n      {\n        var u = Le(e);\n        if (!u) {\n          var c = \"\";\n          (e === void 0 || typeof e == \"object\" && e !== null && Object.keys(e).length === 0) && (c += \" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");\n          var O = nr(p);\n          O ? c += O : c += ke();\n          var S;\n          e === null ? S = \"null\" : Q(e) ? S = \"array\" : e !== void 0 && e.$$typeof === m ? (S = \"<\" + ($(e.type) || \"Unknown\") + \" />\", c = \" Did you accidentally export a JSX literal instead of a component?\") : S = typeof e, f(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\", S, c);\n        }\n        var R = tr(e, r, t, p, v);\n        if (R == null)\n          return R;\n        if (u) {\n          var P = r.children;\n          if (P !== void 0)\n            if (n)\n              if (Q(P)) {\n                for (var A = 0; A < P.length; A++)\n                  Ee(P[A], e);\n                Object.freeze && Object.freeze(P);\n              } else\n                f(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");\n            else\n              Ee(P, e);\n        }\n        return e === b ? ir(R) : ar(R), R;\n      }\n    }\n    function cr(e, r, t) {\n      return Ce(e, r, t, !0);\n    }\n    function lr(e, r, t) {\n      return Ce(e, r, t, !1);\n    }\n    var sr = lr, ur = cr;\n    q.Fragment = b, q.jsx = sr, q.jsxs = ur;\n  }()), q;\n}\n false ? 0 : ne.exports = mr();\nvar $e = ne.exports;\nconst gr = (y, m, _, b) => {\n  let h = m / (_ + b), w = Math.floor(y.length / h);\n  h > y.length && (h = y.length, w = 1);\n  const k = [];\n  for (let i = 0; i < h; i++) {\n    let s = 0;\n    for (let g = 0; g < w && i * w + g < y.length; g++)\n      s += y[i * w + g];\n    k.push(s / w);\n  }\n  return k;\n}, vr = (y, m, _, b, h, w) => {\n  const k = m.height / 2, i = m.getContext(\"2d\");\n  i && (i.clearRect(0, 0, m.width, m.height), h !== \"transparent\" && (i.fillStyle = h, i.fillRect(0, 0, m.width, m.height)), y.forEach((s, g) => {\n    i.fillStyle = w;\n    const o = g * (_ + b), a = k - s / 2, d = _, E = s || 1;\n    i.beginPath(), i.roundRect ? (i.roundRect(o, a, d, E, 50), i.fill()) : i.fillRect(o, a, d, E);\n  }));\n}, Sr = ({\n  mediaRecorder: y,\n  width: m = \"100%\",\n  height: _ = \"100%\",\n  barWidth: b = 2,\n  gap: h = 1,\n  backgroundColor: w = \"transparent\",\n  barColor: k = \"rgb(160, 198, 255)\",\n  fftSize: i = 1024,\n  maxDecibels: s = -10,\n  minDecibels: g = -90,\n  smoothingTimeConstant: o = 0.4\n}) => {\n  const [a] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => new AudioContext()), [d, E] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(), C = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!y.stream)\n      return;\n    const l = a.createAnalyser();\n    E(l), l.fftSize = i, l.minDecibels = g, l.maxDecibels = s, l.smoothingTimeConstant = o, a.createMediaStreamSource(y.stream).connect(l);\n  }, [y.stream]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    d && y.state === \"recording\" && T();\n  }, [d, y.state]);\n  const T = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    if (!d)\n      return;\n    const l = new Uint8Array(d == null ? void 0 : d.frequencyBinCount);\n    y.state === \"recording\" ? (d == null || d.getByteFrequencyData(l), D(l), requestAnimationFrame(T)) : y.state === \"paused\" ? D(l) : y.state === \"inactive\" && a.state !== \"closed\" && a.close();\n  }, [d, a.state]), D = (l) => {\n    if (!C.current)\n      return;\n    const f = gr(\n      l,\n      C.current.width,\n      b,\n      h\n    );\n    vr(\n      f,\n      C.current,\n      b,\n      h,\n      w,\n      k\n    );\n  };\n  return /* @__PURE__ */ $e.jsx(\n    \"canvas\",\n    {\n      ref: C,\n      width: m,\n      height: _,\n      style: {\n        aspectRatio: \"unset\"\n      }\n    }\n  );\n}, hr = (y, m, _, b, h) => {\n  const w = y.getChannelData(0), k = _ / (b + h), i = Math.floor(w.length / k), s = m / 2;\n  let g = [], o = 0;\n  for (let a = 0; a < k; a++) {\n    const d = [];\n    let E = 0;\n    const C = [];\n    let T = 0;\n    for (let f = 0; f < i && a * i + f < y.length; f++) {\n      const j = w[a * i + f];\n      j <= 0 && (d.push(j), E++), j > 0 && (C.push(j), T++);\n    }\n    const D = d.reduce((f, j) => f + j, 0) / E, l = { max: C.reduce((f, j) => f + j, 0) / T, min: D };\n    l.max > o && (o = l.max), Math.abs(l.min) > o && (o = Math.abs(l.min)), g.push(l);\n  }\n  if (s * 0.8 > o * s) {\n    const a = s * 0.8 / o;\n    g = g.map((d) => ({\n      max: d.max * a,\n      min: d.min * a\n    }));\n  }\n  return g;\n}, te = (y, m, _, b, h, w, k, i = 0, s = 1) => {\n  const g = m.height / 2, o = m.getContext(\"2d\");\n  if (!o)\n    return;\n  o.clearRect(0, 0, m.width, m.height), h !== \"transparent\" && (o.fillStyle = h, o.fillRect(0, 0, m.width, m.height));\n  const a = (i || 0) / s;\n  y.forEach((d, E) => {\n    const C = E / y.length, T = a > C;\n    o.fillStyle = T && k ? k : w;\n    const D = E * (_ + b), l = g + d.min, f = _, j = g + d.max - l;\n    o.beginPath(), o.roundRect ? (o.roundRect(D, l, f, j, 50), o.fill()) : o.fillRect(D, l, f, j);\n  });\n}, br = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(\n  ({\n    blob: y,\n    width: m,\n    height: _,\n    barWidth: b = 2,\n    gap: h = 1,\n    currentTime: w,\n    style: k,\n    backgroundColor: i = \"transparent\",\n    barColor: s = \"rgb(184, 184, 184)\",\n    barPlayedColor: g = \"rgb(160, 198, 255)\"\n  }, o) => {\n    const a = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), [d, E] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]), [C, T] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(\n      o,\n      () => a.current,\n      []\n    ), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n      (async () => {\n        if (!a.current)\n          return;\n        if (!y) {\n          const l = Array.from({ length: 100 }, () => ({\n            max: 0,\n            min: 0\n          }));\n          te(\n            l,\n            a.current,\n            b,\n            h,\n            i,\n            s,\n            g\n          );\n          return;\n        }\n        const D = await y.arrayBuffer();\n        await new AudioContext().decodeAudioData(D, (l) => {\n          if (!a.current)\n            return;\n          T(l.duration);\n          const f = hr(\n            l,\n            _,\n            m,\n            b,\n            h\n          );\n          E(f), te(\n            f,\n            a.current,\n            b,\n            h,\n            i,\n            s,\n            g\n          );\n        });\n      })();\n    }, [y, a.current]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n      a.current && te(\n        d,\n        a.current,\n        b,\n        h,\n        i,\n        s,\n        g,\n        w,\n        C\n      );\n    }, [w, C]), /* @__PURE__ */ $e.jsx(\n      \"canvas\",\n      {\n        ref: a,\n        width: m,\n        height: _,\n        style: {\n          ...k\n        }\n      }\n    );\n  }\n);\nbr.displayName = \"AudioVisualizer\";\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-audio-voice-recorder/dist/react-audio-visualize.es-69216c73.js\n"));

/***/ })

}]);